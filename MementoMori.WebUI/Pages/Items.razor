@inherits ReactiveUI.Blazor.ReactiveInjectableComponentBase<MementoMoriFuncs>

@page "/Items"
@using MementoMori.Ortega.Share.Data
@using MementoMori.Ortega.Share.Data.DtoInfo
@using MementoMori.Ortega.Share
@using MementoMori.Ortega.Share.Data.Item
@using MementoMori.Ortega.Share.Enums
@using MementoMori.WebUI.Extensions
@using MementoMori.Ortega.Common.Utils
@using DynamicData.Binding
@using ReactiveUI

<PageTitle>储物箱</PageTitle>

@* <MudTabs MinimumTabWidth="20px"> *@
@*     <MudTabPanel Text="@Masters.TextResourceTable.Get("[ItemBoxTabEquipment]")"> *@
@*         <MudPaper Class="d-flex gap-2 flex-wrap" Elevation="0"> *@
@*         @foreach (var item in ViewModel.UserSyncData.UserItemDtoInfo *@
@*             .Where(d=>d.ItemType == ItemType.Equipment) *@
@*             .Select(d=>new {Info = d, Mb = Masters.EquipmentTable.GetById(d.ItemId)}) *@
@*             .OrderByDescending(d=>d.Mb.RarityFlags).ThenByDescending(d=>d.Mb.EquipmentLv)) *@
@*         { *@
@*             <MudPaper Width="80px" @onclick="() => SelectItem(item.Info)" Style="cursor: pointer"> *@
@*                 <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="0"> *@
@*                     <MudText>Lv@(item.Mb.EquipmentLv)</MudText> *@
@*                     <MudSpacer/> *@
@*                     <MudText>@(Masters.TextResourceTable.Get(item.Mb.RarityFlags))</MudText> *@
@*                 </MudStack> *@
@*                 <MudStack Row="true" AlignItems="AlignItems.Center"> *@
@*                     <MudText Typo="Typo.h6" Style="font-size: 1rem">@(Masters.TextResourceTable.Get(item.Mb.NameKey))</MudText> *@
@*                 </MudStack> *@
@*                 <MudStack Row="true" AlignItems="AlignItems.Center"> *@
@*                     <MudSpacer /> *@
@*                     <MudText>@(item.Info.ItemCount)</MudText> *@
@*                 </MudStack> *@
@*             </MudPaper> *@
@*         } *@
@*          </MudPaper> *@
@*     </MudTabPanel> *@
@*     <MudTabPanel Text="@Masters.TextResourceTable.Get("[ItemBoxTabConsumption]")"></MudTabPanel> *@
@*     <MudTabPanel Text="@Masters.TextResourceTable.Get("[ItemBoxTabMaterial]")"></MudTabPanel> *@
@*     <MudTabPanel Text="@Masters.TextResourceTable.Get("[ItemBoxTabSphere]")"></MudTabPanel> *@
@*     <MudTabPanel Text="@Masters.TextResourceTable.Get("[ItemBoxTabSetPiece]")"></MudTabPanel> *@
@* </MudTabs> *@
<h3>储物箱</h3>
<div class="row">
    <div class="col-4">
        <h4>物品</h4>
        <table class="table">
            <thead>
            <tr>
                <th>ID</th>
                <th>名称</th>
                <th>类型</th>
                <th>稀有度</th>
                <th>数量</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in ViewModel.UserSyncData?.UserItemDtoInfo ?? new List<UserItemDtoInfo>())
            {
                var cmb = Masters.ItemTable.GetByItemTypeAndItemId(item.ItemType, item.ItemId);
                var name = ItemUtil.GetItemName(item);

                <tr>
                    <td>@item.ItemId</td>
                    <td>@name</td>
                    <td>@item.ItemType</td>
                    <td>@(cmb?.ItemRarityFlags ?? ItemRarityFlags.None)</td>
                    <td>@item.ItemCount</td>
                </tr>
            }
            </tbody>
        </table>
    </div>   
    <div class="col-8">
        <h4>装备</h4>
        <table class="table" id="equipmentTable">
            <thead>
            <tr>
                <th>名称</th>
                <th>稀有度</th>
                <th>耐力</th>
                <th>魔力</th>
                <th>力量</th>
                <th>战技</th>
                <th>符石等级</th>
                <th>镶嵌孔数量</th>
                <th>神装等级/经验</th>
                <th>魔装等级/经验</th>
                <th>强化等级</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in ViewModel.UserSyncData?.UserEquipmentDtoInfos ?? new List<UserEquipmentDtoInfo>())
            {
                var cmb = Masters.EquipmentTable.GetById(item.EquipmentId);
                var name = Masters.TextResourceTable.Get(cmb.NameKey);
                
                <tr>
                    <td>@name</td>
                   <td>@cmb.RarityFlags</td>
                   <td>@item.AdditionalParameterHealth</td>
                   <td>@item.AdditionalParameterIntelligence</td>
                   <td>@item.AdditionalParameterMuscle</td>
                   <td>@item.AdditionalParameterEnergy</td>
                   <td>@($"{item.SphereId1},{item.SphereId2},{item.SphereId3},{item.SphereId4}")</td>
                   <td>@item.SphereUnlockedCount</td>
                   <td>@($"{item.LegendSacredTreasureLv}/{item.LegendSacredTreasureExp}")</td>
                   <td>@($"{item.MatchlessSacredTreasureLv}/{item.MatchlessSacredTreasureExp}")</td>
                   <td>@item.ReinforcementLv</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>



@code {
    protected override async Task OnInitializedAsync()
    {
        this.ViewModel.WhenAnyPropertyChanged().Subscribe(_ => InvokeAsync(StateHasChanged));
    }

    private void SelectItem(UserItemDtoInfo item)
    {
        
    }
}
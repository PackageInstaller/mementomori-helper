<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="SyncUserInfo" xml:space="preserve">
    <value>Sync User Info</value>
  </data>
  <data name="CharacterInfo" xml:space="preserve">
    <value>Character Info</value>
  </data>
  <data name="Sync" xml:space="preserve">
      <value>Sync</value>
  </data>
  <data name="ForceDispatch" xml:space="preserve">
      <value>Force Dispatch</value>
  </data>
  <data name="NotStarted" xml:space="preserve">
      <value>Not Started</value>
  </data>
  <data name="OnGoing" xml:space="preserve">
      <value>Ongoing</value>
  </data>
  <data name="NotReceived" xml:space="preserve">
      <value>Not Received</value>
  </data>
  <data name="Received" xml:space="preserve">
      <value>Received</value>
  </data>
  <data name="RewardMissonActivity" xml:space="preserve">
      <value>Reward Medal</value>
  </data>
  <data name="QuickActions" xml:space="preserve">
      <value>Quick Actions</value>
  </data>
  <data name="ExecuteAllQuick" xml:space="preserve">
      <value>Execute All Actions</value>
  </data>
  <data name="ReinforceEquipmentOnce" xml:space="preserve">
      <value>Reinforce Equipment Once</value>
  </data>
  <data name="UseNormalItems" xml:space="preserve">
      <value>Use Normal Items</value>
  </data>
  <data name="AutoMatchlessInheritance" xml:space="preserve">
      <value>Auto Matchless Inheritance To D Rarity</value>
  </data>
  <data name="AutoLegendInheritance" xml:space="preserve">
      <value>Auto Legend Inheritance To D Rarity</value>
  </data>
  <data name="TowerType" xml:space="preserve">
      <value>Tower Type</value>
  </data>
  <data name="TargetValue" xml:space="preserve">
      <value>Target Value</value>
  </data>
  <data name="PleaseLogin" xml:space="preserve">
      <value>Please Click Login to Use Assistant</value>
  </data>
  <data name="NotUnlocked" xml:space="preserve">
      <value>Not Unlocked</value>
  </data>
  <data name="Finished" xml:space="preserve">
      <value>Finished</value>
  </data>
  <data name="ExecutionOutput" xml:space="preserve">
      <value>Execution Output</value>
  </data>
  <data name="SelectPlayer" xml:space="preserve">
      <value>Select Player</value>
  </data>
  <data name="Name" xml:space="preserve">
      <value>Name</value>
  </data>
  <data name="Slot" xml:space="preserve">
      <value>Slot</value>
  </data>
  <data name="ItemLimitCount" xml:space="preserve">
      <value>Count Limit</value>
  </data>
  <data name="GachaResult" xml:space="preserve">
      <value>Gacha Result</value>
  </data>
  <data name="GameAssistant" xml:space="preserve">
      <value>Game Assistant</value>
  </data>
  <data name="RemoveEquipmentOfCharacter" xml:space="preserve">
      <value>Remove all equips of {0} {1}</value>
  </data>
  <data name="Enter" xml:space="preserve">
      <value>Enter</value>
  </data>
  <data name="PutOnEquipmentOfCharacter" xml:space="preserve">
      <value>Put on all equips of {0} {1}</value>
  </data>
  <data name="CaveCurrentState" xml:space="preserve">
      <value>Current at {0} layer，coordinate {1},{2}，state {3}, {4}, enemy battle power {5}</value>
  </data>
  <data name="CaveErrorSelectSupport" xml:space="preserve">
      <value>Error when select support member, {0}, continue to next one</value>
  </data>
  <data name="CaveBuyItemSuccess" xml:space="preserve">
      <value>Buy {0}×{1} Success</value>
  </data>
  <data name="CaveErrorRelicExist" xml:space="preserve">
      <value>Select Next</value>
  </data>
  <data name="UseOverLimitItem" xml:space="preserve">
      <value>Use over limit item</value>
  </data>
  <data name="NothingToReceive" xml:space="preserve">
      <value>Nothing to receive</value>
  </data>
  <data name="DesignatedTargetProp" xml:space="preserve">
      <value>Designated the target prop</value>
  </data>
  <data name="DispatchingTargetPropMission" xml:space="preserve">
      <value>Dispatching the target prop mission</value>
  </data>
  <data name="Dispatched" xml:space="preserve">
      <value>Dispatched</value>
  </data>
  <data name="DispatchingAll" xml:space="preserve">
      <value>Not specified target prop or forced dispatch, dispatching all tasks.</value>
  </data>
  <data name="NothingToSmelt" xml:space="preserve">
      <value>There are no more items to smelt.</value>
  </data>
  <data name="FindEquipmentCharacter" xml:space="preserve">
      <value>For equipment, find a wearable character, and then unequip once.</value>
  </data>
  <data name="NoLegendEquip" xml:space="preserve">
      <value>No Legend Equipments</value>
  </data>
  <data name="NoInheritableDRarityEquip" xml:space="preserve">
      <value>No Inheritable D Rarity Equipments</value>
  </data>
  <data name="NoAvailableGacha" xml:space="preserve">
      <value>No Available Gacha</value>
  </data>
  <data name="GachaExecInfo" xml:space="preserve">
      <value>Gacha {0} {1} times, used {2}×{3}</value>
  </data>
  <data name="BattleResult" xml:space="preserve">
      <value>Battle Result</value>
  </data>
  <data name="AutoBossExecMessage" xml:space="preserve">
      <value>Challage {0} boss one time：{1},  total：{2}, Success：{3}, Err: {4}</value>
  </data>
  <data name="AutoBossErrorMessage" xml:space="preserve">
      <value>Error count reached {0} times, abort</value>
  </data>
  <data name="AutoTowerInfiniteExecMsg" xml:space="preserve">
      <value>Challage {0} {1} layer one time：{2},  total：{3}, Success：{4}, Err: {5}</value>
  </data>
  <data name="AutoTowerElementExecMsg" xml:space="preserve">
      <value>Challage {0} {1} layer one time：{2},  {6}/10,total：{3}, Success：{4}, Err: {5}</value>
  </data>
  <data name="NoAvailable" xml:space="preserve">
      <value>No Available {0}</value>
  </data>
  <data name="RewardMissionMsg" xml:space="preserve">
      <value>Get {0} 's {1} Reward</value>
  </data>
  <data name="Selected" xml:space="preserve">
      <value>Selected</value>
  </data>
  <data name="NotSelected" xml:space="preserve">
      <value>Not Selected</value>
  </data>
  <data name="Success" xml:space="preserve">
      <value>Success</value>
  </data>
  <data name="Unknown" xml:space="preserve">
      <value>Unkonow</value>
  </data>
  <data name="AutoJobSwitchs" xml:space="preserve">
      <value>Auto Job Switchs</value>
  </data>
  <data name="AutoJobCrons" xml:space="preserve">
      <value>Auto Job Crons</value>
  </data>
  <data name="DisableAllJobs" xml:space="preserve">
      <value>Disable All Jobs</value>
  </data>
  <data name="AutoGacha" xml:space="preserve">
      <value>Auto Gacha</value>
  </data>
  <data name="DailyJobCronExpression" xml:space="preserve">
      <value>Daily Job Cron Expression</value>
  </data>
  <data name="RewardClaimJobCronExpression" xml:space="preserve">
      <value>Reward Claim Job Cron Expression</value>
  </data>
  <data name="CronExpression" xml:space="preserve">
      <value>Cron Expression</value>
  </data>
  <data name="BountyQuestTargetItems" xml:space="preserve">
      <value>Automatically dispatch tasks when the following rewards are available</value>
  </data>
  <data name="DungeonBattleTargetItems" xml:space="preserve">
      <value>Items to be automatically purchased from the shop</value>
  </data>
  <data name="Others" xml:space="preserve">
      <value>Others</value>
  </data>
  <data name="AutoGachaConsumeItems" xml:space="preserve">
      <value>Auto Gacha Consume Items</value>
  </data>
  <data name="SelectedXItems" xml:space="preserve">
      <value>Selected {0} Items</value>
  </data>
  <data name="AutoRequestDelay" xml:space="preserve">
      <value>Auto Request Delay</value>
  </data>
  <data name="MaxUseRecoveryItem" xml:space="preserve">
      <value>Maximum use quantity for recovery items (0 means not using)</value>
  </data>
  <data name="PreferTreasureChest" xml:space="preserve">
      <value>Prioritize selecting treasure chest nodes</value>
  </data>
  <data name="DiscountPercentageforProducts" xml:space="preserve">
      <value>Discount Percentage for Products</value>
  </data>
  <data name="DailyJob" xml:space="preserve">
      <value>Daily Job </value>
  </data>
  <data name="RewardClaimJob" xml:space="preserve">
      <value>Reward Claim Job</value>
  </data>
  <data name="NextExecutionTime" xml:space="preserve">
      <value>Next Execution Time</value>
  </data>
</root>